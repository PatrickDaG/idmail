[package]
name = "idmail"
edition = "2021"
version = "1.0.1"
authors = ["oddlama <oddlama@oddlama.org>"]
description = "An email alias and account management interface for self-hosted mailservers"
homepage = "https://github.com/oddlama/idmail"
repository = "https://github.com/oddlama/idmail"
keywords = ["email", "alias", "leptos", "web", "wasm"]
categories = []
license = "MIT"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
anyhow = "1.0.93"
argon2 = {version = "0.5.3", optional = true}
async-trait = { version = "0.1", optional = true }
axum = { version = "0.7", optional = true, features = ["macros"] }
axum-extra = "0.9.6"
axum_session = { version = "0.14.4", optional = true }
axum_session_auth = { version = "0.14.1", optional = true }
axum_session_sqlx = { version = "0.3.0", features = ["sqlite"], optional = true }
chrono = { version = "0.4.38", features = ["serde"] }
chrono-humanize = { version = "0.2.3", features = ["wasmbind"] }
console_error_panic_hook = "0.1"
console_log = "1.0"
email_address = "0.2.9"
faker_rand = "0.1.1"
futures = "0.3"
getrandom = "0.2.15"
hex = "0.4.3"
http = "1.1"
icondata = "0.5.0"
leptos = { version = "0.6", features = ["nightly"] }
leptos-struct-table = "0.13.1"
leptos-use = "0.13.11"
leptos_axum = { version = "0.6", optional = true }
leptos_icons = "0.3.1"
leptos_meta = { version = "0.6", features = ["nightly"] }
leptos_router = { version = "0.6", features = ["nightly"] }
leptos_toaster = { version = "0.1.7", features = ["builtin_toast"] }
log = "0.4"
owo-colors = "4.1.0"
rand = { version = "0.8", features = ["min_const_gen"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.133"
server_fn = { version = "0.6", features = ["serde-lite"] }
sqlx = { version = "0.8.2", features = [ "runtime-tokio-rustls", "sqlite", ], optional = true }
thiserror = "2.0.3"
tokio = { version = "1", features = ["full"], optional = true }
toml = "0.8.19"
tower = { version = "0.5.1", features = ["util"], optional = true }
tower-http = { version = "0.6.2", features = ["fs"], optional = true }
tracing = { version = "0.1", optional = true }
tracing-subscriber = "0.3.18"
wasm-bindgen = "0.2"

[dependencies.web-sys]
version = "0.3"
features = ["Clipboard", "Navigator"]

[features]
default = ["ssr"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
	"dep:axum",
	"dep:tower",
	"dep:tower-http",
	"dep:tokio",
	"dep:axum_session_auth",
	"dep:axum_session_sqlx",
	"dep:axum_session",
	"dep:async-trait",
	"dep:sqlx",
	"dep:argon2",
	"leptos/ssr",
	"leptos_meta/ssr",
	"leptos_router/ssr",
	"leptos-use/ssr",
	"dep:leptos_axum",
]

[package.metadata.cargo-all-features]
denylist = ["axum", "tower", "tower-http", "tokio", "sqlx", "leptos_axum"]
skip_feature_sets = [["ssr", "hydrate"]]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "idmail"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# The tailwind input file.
tailwind-input-file = "style/tailwind.css"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"
# The port to use for automatic reload monitoring
reload-port = 3001
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]
# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false
# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]
# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
